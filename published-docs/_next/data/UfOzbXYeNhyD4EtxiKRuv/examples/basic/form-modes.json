{"pageProps":{"onSubmitUnlessErrorSourceCode":"import React from \"react\";\nimport { Button, Stack } from \"react-bootstrap\";\nimport { useDumbForm, ValidationError, ValidationSchema } from \"react-dumb-form\";\n\n// UI for documentation only\nimport { FormCheckbox, FormGroup, FormGroupTitle, FormTextarea, FormTextInput } from \"ui/forms\";\n\nconst defaultValues = {\n  name: \"\",\n  commentTitle: \"\",\n  commentBody: \"\",\n  rememberMe: true,\n};\ntype Form = typeof defaultValues;\n\nfunction validateLength(stringField: string) {\n  if (stringField.length < 6) throw new ValidationError(\"Value must be at least 6 characters long.\");\n}\n\nconst validationSchema: ValidationSchema<Form> = {\n  required: { fields: [\"name\", \"commentTitle\", \"commentBody\", \"rememberMe\"] },\n\n  validators: {\n    name: validateLength,\n    commentTitle: validateLength,\n    commentBody: validateLength,\n  },\n};\n\nexport function ExampleModeOnSubmitUnlessError() {\n  const [data, setData] = React.useState<Form>();\n\n  const {\n    formProps,\n    names,\n    errorData: { errors },\n  } = useDumbForm<Form>({\n    name: \"example-mode-onSubmitUnlessError\",\n    mode: \"onSubmitUnlessError\",\n    defaultValues,\n    validationSchema,\n    onSubmit: setData,\n  });\n\n  return (\n    <form {...formProps}>\n      <FormGroupTitle>Leave a comment</FormGroupTitle>\n      <FormGroup>\n        <FormTextInput label=\"Your name\" name={names.name} error={errors.name} />\n        <FormTextInput label=\"Comment title\" name={names.commentTitle} error={errors.commentTitle} />\n      </FormGroup>\n      <FormTextarea placeholder=\"What's on your mind?\" name={names.commentBody} error={errors.commentBody} rows={3} />\n      <FormCheckbox label=\"Remember me next time\" name={names.rememberMe} error={errors.rememberMe} />\n\n      <Stack direction=\"horizontal\" className=\"justify-content-end\">\n        <Button type=\"reset\" variant=\"outline-danger\" className=\"me-1\" size=\"sm\">\n          Clear\n        </Button>\n        <Button type=\"submit\" size=\"sm\">\n          Post comment\n        </Button>\n      </Stack>\n    </form>\n  );\n}\n","onSubmitSourceCode":"import React from \"react\";\nimport { Button, Stack } from \"react-bootstrap\";\nimport { useDumbForm, ValidationError, ValidationSchema } from \"react-dumb-form\";\n\n// UI for documentation only\nimport { FormCheckbox, FormGroup, FormGroupTitle, FormTextarea, FormTextInput } from \"ui/forms\";\n\nconst defaultValues = {\n  name: \"\",\n  commentTitle: \"\",\n  commentBody: \"\",\n  rememberMe: true,\n};\ntype Form = typeof defaultValues;\n\nfunction validateLength(stringField: string) {\n  if (stringField.length < 6) throw new ValidationError(\"Value must be at least 6 characters long.\");\n}\n\nconst validationSchema: ValidationSchema<Form> = {\n  required: { fields: [\"name\", \"commentTitle\", \"commentBody\", \"rememberMe\"] },\n\n  validators: {\n    name: validateLength,\n    commentTitle: validateLength,\n    commentBody: validateLength,\n  },\n};\n\nexport function ExampleModeOnSubmit() {\n  const [data, setData] = React.useState<Form>();\n\n  const {\n    formProps,\n    names,\n    errorData: { errors },\n  } = useDumbForm<Form>({\n    name: \"example-mode-onSubmit\",\n    mode: \"onSubmit\",\n    defaultValues,\n    validationSchema,\n    onSubmit: setData,\n  });\n\n  return (\n    <form {...formProps}>\n      <FormGroupTitle>Leave a comment</FormGroupTitle>\n      <FormGroup>\n        <FormTextInput label=\"Your name\" name={names.name} error={errors.name} />\n        <FormTextInput label=\"Comment title\" name={names.commentTitle} error={errors.commentTitle} />\n      </FormGroup>\n      <FormTextarea placeholder=\"What's on your mind?\" name={names.commentBody} error={errors.commentBody} rows={3} />\n      <FormCheckbox label=\"Remember me next time\" name={names.rememberMe} error={errors.rememberMe} />\n\n      <Stack direction=\"horizontal\" className=\"justify-content-end\">\n        <Button type=\"reset\" variant=\"outline-danger\" className=\"me-1\" size=\"sm\">\n          Clear\n        </Button>\n        <Button type=\"submit\" size=\"sm\">\n          Post comment\n        </Button>\n      </Stack>\n    </form>\n  );\n}\n","onBlurUnlessErrorSourceCode":"import React from \"react\";\nimport { Button, Stack } from \"react-bootstrap\";\nimport { useDumbForm, ValidationError, ValidationSchema } from \"react-dumb-form\";\n\n// UI for documentation only\nimport { FormCheckbox, FormGroup, FormGroupTitle, FormTextarea, FormTextInput } from \"ui/forms\";\n\nconst defaultValues = {\n  name: \"\",\n  commentTitle: \"\",\n  commentBody: \"\",\n  rememberMe: true,\n};\ntype Form = typeof defaultValues;\n\nfunction validateLength(stringField: string) {\n  if (stringField.length < 6) throw new ValidationError(\"Value must be at least 6 characters long.\");\n}\n\nconst validationSchema: ValidationSchema<Form> = {\n  required: { fields: [\"name\", \"commentTitle\", \"commentBody\", \"rememberMe\"] },\n\n  validators: {\n    name: validateLength,\n    commentTitle: validateLength,\n    commentBody: validateLength,\n  },\n};\n\nexport function ExampleModeOnBlurUnlessError() {\n  const [data, setData] = React.useState<Form>();\n\n  const {\n    formProps,\n    names,\n    errorData: { errors },\n  } = useDumbForm<Form>({\n    name: \"example-mode-onBlurUnlessError\",\n    mode: \"onBlurUnlessError\",\n    defaultValues,\n    validationSchema,\n    onSubmit: setData,\n    onChange: setData,\n  });\n\n  return (\n    <form {...formProps}>\n      <FormGroupTitle>Leave a comment</FormGroupTitle>\n      <FormGroup>\n        <FormTextInput label=\"Your name\" name={names.name} error={errors.name} />\n        <FormTextInput label=\"Comment title\" name={names.commentTitle} error={errors.commentTitle} />\n      </FormGroup>\n      <FormTextarea placeholder=\"What's on your mind?\" name={names.commentBody} error={errors.commentBody} rows={3} />\n      <FormCheckbox label=\"Remember me next time\" name={names.rememberMe} error={errors.rememberMe} />\n\n      <Stack direction=\"horizontal\" className=\"justify-content-end\">\n        <Button type=\"reset\" variant=\"outline-danger\" className=\"me-1\" size=\"sm\">\n          Clear\n        </Button>\n        <Button type=\"submit\" size=\"sm\">\n          Post comment\n        </Button>\n      </Stack>\n    </form>\n  );\n}\n","onBlurSourceCode":"import React from \"react\";\nimport { Button, Stack } from \"react-bootstrap\";\nimport { useDumbForm, ValidationError, ValidationSchema } from \"react-dumb-form\";\n\n// UI for documentation only\nimport { FormCheckbox, FormGroup, FormGroupTitle, FormTextarea, FormTextInput } from \"ui/forms\";\n\nconst defaultValues = {\n  name: \"\",\n  commentTitle: \"\",\n  commentBody: \"\",\n  rememberMe: true,\n};\ntype Form = typeof defaultValues;\n\nfunction validateLength(stringField: string) {\n  if (stringField.length < 6) throw new ValidationError(\"Value must be at least 6 characters long.\");\n}\n\nconst validationSchema: ValidationSchema<Form> = {\n  required: { fields: [\"name\", \"commentTitle\", \"commentBody\", \"rememberMe\"] },\n\n  validators: {\n    name: validateLength,\n    commentTitle: validateLength,\n    commentBody: validateLength,\n  },\n};\n\nexport function ExampleModeOnBlur() {\n  const [data, setData] = React.useState<Form>();\n\n  const {\n    formProps,\n    names,\n    errorData: { errors },\n  } = useDumbForm<Form>({\n    name: \"example-mode-onBlur\",\n    mode: \"onBlur\",\n    defaultValues,\n    validationSchema,\n    onSubmit: setData,\n    onChange: setData,\n  });\n\n  return (\n    <form {...formProps}>\n      <FormGroupTitle>Leave a comment</FormGroupTitle>\n      <FormGroup>\n        <FormTextInput label=\"Your name\" name={names.name} error={errors.name} />\n        <FormTextInput label=\"Comment title\" name={names.commentTitle} error={errors.commentTitle} />\n      </FormGroup>\n      <FormTextarea placeholder=\"What's on your mind?\" name={names.commentBody} error={errors.commentBody} rows={3} />\n      <FormCheckbox label=\"Remember me next time\" name={names.rememberMe} error={errors.rememberMe} />\n\n      <Stack direction=\"horizontal\" className=\"justify-content-end\">\n        <Button type=\"reset\" variant=\"outline-danger\" className=\"me-1\" size=\"sm\">\n          Clear\n        </Button>\n        <Button type=\"submit\" size=\"sm\">\n          Post comment\n        </Button>\n      </Stack>\n    </form>\n  );\n}\n","onChangeSourceCode":"import React from \"react\";\nimport { Button, Stack } from \"react-bootstrap\";\nimport { useDumbForm, ValidationError, ValidationSchema } from \"react-dumb-form\";\n\n// UI for documentation only\nimport { FormCheckbox, FormGroup, FormGroupTitle, FormTextarea, FormTextInput } from \"ui/forms\";\n\nconst defaultValues = {\n  name: \"\",\n  commentTitle: \"\",\n  commentBody: \"\",\n  rememberMe: true,\n};\ntype Form = typeof defaultValues;\n\nfunction validateLength(stringField: string) {\n  if (stringField.length < 6) throw new ValidationError(\"Value must be at least 6 characters long.\");\n}\n\nconst validationSchema: ValidationSchema<Form> = {\n  required: { fields: [\"name\", \"commentTitle\", \"commentBody\", \"rememberMe\"] },\n\n  validators: {\n    name: validateLength,\n    commentTitle: validateLength,\n    commentBody: validateLength,\n  },\n};\n\nexport function ExampleModeOnChange() {\n  const [data, setData] = React.useState<Form>();\n\n  const {\n    formProps,\n    names,\n    errorData: { errors },\n  } = useDumbForm<Form>({\n    name: \"example-mode-onChange\",\n    mode: \"onChange\",\n    defaultValues,\n    validationSchema,\n    onSubmit: setData,\n    onChange: setData,\n  });\n\n  return (\n    <form {...formProps}>\n      <FormGroupTitle>Leave a comment</FormGroupTitle>\n      <FormGroup>\n        <FormTextInput label=\"Your name\" name={names.name} error={errors.name} />\n        <FormTextInput label=\"Comment title\" name={names.commentTitle} error={errors.commentTitle} />\n      </FormGroup>\n      <FormTextarea placeholder=\"What's on your mind?\" name={names.commentBody} error={errors.commentBody} rows={3} />\n      <FormCheckbox label=\"Remember me next time\" name={names.rememberMe} error={errors.rememberMe} />\n\n      <Stack direction=\"horizontal\" className=\"justify-content-end\">\n        <Button type=\"reset\" variant=\"outline-danger\" className=\"me-1\" size=\"sm\">\n          Clear\n        </Button>\n        <Button type=\"submit\" size=\"sm\">\n          Post comment\n        </Button>\n      </Stack>\n    </form>\n  );\n}\n"},"__N_SSG":true}