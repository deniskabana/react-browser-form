{"pageProps":{"sourceCode":"import React from \"react\";\nimport { useDumbForm, ValidationError, ValidationSchema } from \"react-dumb-form\";\n\n// UI for documentation only\nimport { Button, Form } from \"react-bootstrap\";\nimport { FormTextInput, FormCheckbox, FormGroup, FormGroupTitle } from \"ui/forms\";\nimport Separator from \"ui/Separator\";\n\n// FORM SETUP AND VALIDATION\n// --------------------------------------------------------------------------------\n\nconst defaultValues = {\n  firstName: \"\",\n  lastName: \"\",\n  billingAddress: \"\",\n  email: \"\",\n  phoneNumber: \"\",\n  hasDifferentShipping: false,\n  shippingAddress: \"\",\n  hasAgreedToTerms: false,\n  hasSubscribed: false,\n};\ntype Form = typeof defaultValues;\n\nconst validationSchema: ValidationSchema<Form> = {\n  required: { fields: [\"firstName\", \"lastName\", \"billingAddress\", \"hasAgreedToTerms\"] },\n\n  validators: {\n    email: email => {\n      if (!email.match(/^\\S{2,}@\\S{2,}\\.\\S{2,}$/)) throw new ValidationError(\"Provide a valid e-mail address.\");\n    },\n    phoneNumber: phoneNumber => {\n      if (phoneNumber.length === 0) return; // Do not validate if not set. It is not required.\n      if (!phoneNumber.match(/^\\+?[\\d\\s]+$/) || (phoneNumber.match(/\\d/g) ?? []).length < 4)\n        throw new ValidationError(\"Phone number can start with a + sign, needs 4 or more numbers and can have spaces.\");\n    },\n    shippingAddress: (shippingAddress, { hasDifferentShipping }) => {\n      // Conditional validation - only validate if `hasDifferentShipping` is checked\n      if (hasDifferentShipping && shippingAddress.length < 1)\n        throw new ValidationError(\"Shipping address is required if chosen.\");\n    },\n  },\n};\n\n// COMPONENT\n// --------------------------------------------------------------------------------\n\nexport function ExampleEcommerceCheckoutForm() {\n  const [data, setData] = React.useState(defaultValues);\n\n  const { formProps, names, errorData } = useDumbForm<Form>({\n    name: \"example-ecommerce-checkout-form\",\n    onSubmit: setData,\n    onChange: setData,\n    defaultValues,\n    validationSchema,\n    liveFields: [\"hasDifferentShipping\"],\n  });\n\n  const { errors } = errorData;\n\n  return (\n    <form {...formProps}>\n      <FormGroupTitle>Billing information</FormGroupTitle>\n      <FormGroup>\n        <FormTextInput label=\"First name\" requiredMark name={names.firstName} error={errors.firstName} />\n        <FormTextInput label=\"Last name\" requiredMark name={names.lastName} error={errors.lastName} />\n      </FormGroup>\n      <FormGroup>\n        <FormTextInput label=\"E-mail\" type=\"email\" requiredMark name={names.email} error={errors.email} />\n        <FormTextInput label=\"Phone number\" type=\"tel\" name={names.phoneNumber} error={errors.phoneNumber} />\n      </FormGroup>\n      <FormTextInput label=\"Billing address\" requiredMark name={names.billingAddress} error={errors.billingAddress} />\n\n      <Separator small dashed />\n\n      <FormGroupTitle>Shipping information</FormGroupTitle>\n      <FormCheckbox\n        label=\"Different shipping address?\"\n        name={names.hasDifferentShipping}\n        error={errors.hasDifferentShipping}\n      />\n      {data.hasDifferentShipping ? (\n        <FormTextInput\n          label=\"Shipping address\"\n          requiredMark\n          name={names.shippingAddress}\n          error={errors.shippingAddress}\n        />\n      ) : null}\n\n      <Separator small dashed />\n\n      <FormGroupTitle>Consent</FormGroupTitle>\n      <FormCheckbox\n        label={\n          <span>\n            I read and agree with <a href=\"#\">Terms and conditions</a>.\n          </span>\n        }\n        requiredMark\n        name={names.hasAgreedToTerms}\n        error={errors.hasAgreedToTerms}\n      />\n      <FormCheckbox\n        label=\"I want to receive e-mail newsletter.\"\n        name={names.hasSubscribed}\n        error={errors.hasSubscribed}\n      />\n\n      <Separator small />\n\n      <Button type=\"submit\" disabled={errorData.count > 0}>\n        Place order\n      </Button>\n    </form>\n  );\n}\n"},"__N_SSG":true}