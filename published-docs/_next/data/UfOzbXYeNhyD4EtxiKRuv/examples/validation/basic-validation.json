{"pageProps":{"basicSourceCode":"import React from \"react\";\nimport { useDumbForm, ValidationError, ValidationSchema } from \"react-dumb-form\";\n\n// UI for documentation only\nimport { Button, Stack } from \"react-bootstrap\";\nimport { FormGroup, FormGroupTitle, FormTextInput } from \"ui/forms\";\nimport { FormPassword } from \"ui/forms/FormPassword\";\n\n// FORM SETUP AND VALIDATION\n// --------------------------------------------------------------------------------\n\nconst defaultValues = {\n  name: \"\",\n  email: \"\",\n  newPassword: \"\",\n};\ntype Form = typeof defaultValues;\n\nconst validationSchema: ValidationSchema<Form> = {\n  validators: {\n    name: name => {\n      if (name.length < 5) throw new ValidationError(\"Name must be at least 5 characters long\");\n    },\n\n    email: email => {\n      if (!email.match(/^\\S{2,}@\\S{2,}\\.\\S{2,}$/)) throw new ValidationError(\"E-mail must match pattern xx@xx.xx\");\n    },\n\n    newPassword: newPassword => {\n      if (!newPassword.match(/[a-z]/))\n        throw new ValidationError(\"Password must contain at least one lowercase letter.\");\n      if (!newPassword.match(/[A-Z]/))\n        throw new ValidationError(\"Password must contain at least one UPPERCASE letter.\");\n      if (!newPassword.match(/[0-9]/)) throw new ValidationError(\"Password must contain at least one number.\");\n      if (newPassword.length < 8) throw new ValidationError(\"Password must be at least 8 characters long.\");\n    },\n  },\n};\n\n// COMPONENT\n// --------------------------------------------------------------------------------\n\nexport function ExampleBasicValidation() {\n  const [data, setData] = React.useState<Form>();\n\n  const { formProps, names, errorData } = useDumbForm<Form>({\n    name: \"example-basic-validation-form\",\n    defaultValues,\n    onSubmit: setData,\n    validationSchema,\n  });\n\n  const { errors } = errorData;\n\n  return (\n    <form {...formProps}>\n      <FormGroupTitle>User registration</FormGroupTitle>\n      <FormGroup>\n        <FormTextInput label=\"Name\" requiredMark name={names.name} error={errors.name} />\n        <FormTextInput label=\"E-mail\" requiredMark name={names.email} error={errors.email} />\n      </FormGroup>\n      <FormPassword label=\"Password\" requiredMark name={names.newPassword} error={errors.newPassword} />\n\n      <Stack direction=\"horizontal\" className=\"justify-content-end mt-5\">\n        <Button type=\"submit\" disabled={errorData.count > 0}>\n          Submit registration\n        </Button>\n      </Stack>\n    </form>\n  );\n}\n","onInitSourceCode":"import React from \"react\";\nimport { useDumbForm, ValidationError, ValidationSchema } from \"react-dumb-form\";\n\n// UI for documentation only\nimport { Button, Stack } from \"react-bootstrap\";\nimport { FormGroup, FormGroupTitle, FormTextInput } from \"ui/forms\";\nimport { FormPassword } from \"ui/forms/FormPassword\";\n\n// FORM SETUP AND VALIDATION\n// --------------------------------------------------------------------------------\n\nconst defaultValues = {\n  name: \"\",\n  email: \"\",\n  newPassword: \"\",\n};\ntype Form = typeof defaultValues;\n\nconst validationSchema: ValidationSchema<Form> = {\n  validators: {\n    name: name => {\n      if (name.length < 5) throw new ValidationError(\"Name must be at least 5 characters long\");\n    },\n\n    email: email => {\n      if (!email.match(/^\\S{2,}@\\S{2,}\\.\\S{2,}$/)) throw new ValidationError(\"E-mail must match pattern xx@xx.xx\");\n    },\n\n    newPassword: newPassword => {\n      if (!newPassword.match(/[a-z]/))\n        throw new ValidationError(\"Password must contain at least one lowercase letter.\");\n      if (!newPassword.match(/[A-Z]/))\n        throw new ValidationError(\"Password must contain at least one UPPERCASE letter.\");\n      if (!newPassword.match(/[0-9]/)) throw new ValidationError(\"Password must contain at least one number.\");\n      if (newPassword.length < 8) throw new ValidationError(\"Password must be at least 8 characters long.\");\n    },\n  },\n};\n\n// COMPONENT\n// --------------------------------------------------------------------------------\n\nexport function ExampleBasicValidationOnInit() {\n  const [data, setData] = React.useState<Form>();\n\n  const { formProps, names, errorData } = useDumbForm<Form>({\n    name: \"example-basic-validation-on-init-form\",\n    defaultValues,\n    onSubmit: setData,\n    validationSchema,\n    validateAfterInit: true,\n  });\n\n  const { errors } = errorData;\n\n  return (\n    <form {...formProps}>\n      <FormGroupTitle>User registration</FormGroupTitle>\n      <FormGroup>\n        <FormTextInput label=\"Name\" requiredMark name={names.name} error={errors.name} />\n        <FormTextInput label=\"E-mail\" requiredMark name={names.email} error={errors.email} />\n      </FormGroup>\n      <FormPassword label=\"Password\" requiredMark name={names.newPassword} error={errors.newPassword} />\n\n      <Stack direction=\"horizontal\" className=\"justify-content-end mt-5\">\n        <Button type=\"submit\" disabled={errorData.count > 0}>\n          Submit registration\n        </Button>\n      </Stack>\n    </form>\n  );\n}\n"},"__N_SSG":true}