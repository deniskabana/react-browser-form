(self.webpackChunk_N_E=self.webpackChunk_N_E||[]).push([[371],{5256:function(e,n,a){(window.__NEXT_P=window.__NEXT_P||[]).push(["/documentation/validation-and-transformation",function(){return a(3393)}])},3393:function(e,n,a){"use strict";a.r(n),a.d(n,{default:function(){return u}});var s=a(5893),i=a(9008),t=a.n(i),r=a(1664),o=a.n(r),l=a(8182),d=a(2669),c=a(8496);function u(){return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(t(),{children:(0,s.jsx)("title",{children:"Validation and transformation - React Dumb Form Docs"})}),(0,s.jsxs)("main",{children:[(0,s.jsx)("h1",{children:"Validation and transformation"}),(0,s.jsxs)("p",{children:["React Dumb Form provides a ",(0,s.jsx)("strong",{children:"minimal, but powerful"})," first class API for helping with validation and data and/or type transformations."]}),(0,s.jsx)(d.Z,{}),(0,s.jsxs)("div",{children:[(0,s.jsx)("h2",{className:"mb-4",children:"Validation"}),(0,s.jsx)(c.Z,{variant:"danger",children:"Validation does not currently support 3rd-party libraries like Yup, Zod or Joi. Check introduction to understand if it is planned."}),(0,s.jsxs)("p",{children:["Validation in React Dumb Form is done in the easiest meaningful way possible. We aimed to make it type-safe, intuitive and re-usable. Using validation like this you can end up with a small amount of code that is just as powerful as using complex schemas. The error you throw with ",(0,s.jsx)("code",{children:"ValidationError"})," will be used as error message."]}),(0,s.jsx)("p",{children:"This is an example validation:"}),(0,s.jsx)(l.Z,{className:"my-3 shadow-sm",children:(0,s.jsx)("pre",{className:"m-0 line-numbers language-tsx",tabIndex:-1,children:(0,s.jsx)("code",{className:"language-tsx",children:'const validationSchema: ValidationSchema<Form> = {\n  // Required fields\n  required: { fields: ["firstName", "lastName"], message: "An optional custom message" },\n\n  validators: {\n    // Basic validation\n    age: age => if (age < 18) throw new ValidationError("You must be at least 18 years old.");\n\n    // Composed validation\n    jobTitle: [validatorFunction, anotherValidatorFunction],\n\n    // Access all form data\n    phoneNumber: (phoneNumber, data) =>\n      if (!phoneNumber && !data.email) throw new ValidationError("Phone number is required if no e-mail provided."),\n  },\n}'})})}),(0,s.jsxs)("p",{children:["There are 2 optional keys on the ",(0,s.jsx)("code",{children:"validationSchema"})," that you need to be aware of:"]}),(0,s.jsxs)("ul",{children:[(0,s.jsxs)("li",{children:[(0,s.jsx)("code",{children:"required"}),(0,s.jsx)("ul",{children:(0,s.jsxs)("li",{children:["This is a list of fields by name that you consider required. By default, there is an error message in English - ",(0,s.jsx)("code",{children:'"This field is required."'}),". Any field provided with ",(0,s.jsx)("code",{children:"fields"})," is checked for nullish values or empty strings."]})})]}),(0,s.jsxs)("li",{children:[(0,s.jsx)("code",{children:"validators"}),(0,s.jsxs)("ul",{children:[(0,s.jsx)("li",{children:"This is where you can harness the power of React Dumb Form's type safety. Validators accepts named keys that correspond to your schema and should be a function that receives 2 arguments - current field and all form data. The field's data has a type you provided to React Dumb Form when initializing."}),(0,s.jsx)("li",{children:"You can also compose your validators by providing an array of functions instead of a single function."})]})]})]})]}),(0,s.jsx)(d.Z,{}),(0,s.jsxs)("div",{children:[(0,s.jsx)("h2",{className:"mb-4",children:"Transformation"}),(0,s.jsxs)(c.Z,{variant:"info",children:["There are built-in transformations that happen based on the ",(0,s.jsx)("code",{children:"input.type"})," React Dumb Forms finds in DOM."]}),(0,s.jsxs)("p",{children:["When using input types that correspons to your schema, like ",(0,s.jsx)("code",{children:'type="number"'}),", automatic transformation take place. You can prevent this by passing ",(0,s.jsx)("code",{children:"disableDefaultTransformation: true"})," ","to the transformation schema. To see this in action, see"," ",(0,s.jsx)(o(),{href:"/examples/advanced/automatic-value-types",children:"Automatic value types"})," example."]}),(0,s.jsx)(l.Z,{className:"my-3 shadow-sm",children:(0,s.jsx)("pre",{className:"m-0 line-numbers language-tsx",tabIndex:-1,children:(0,s.jsx)("code",{className:"language-tsx",children:'const transformationSchema: TransformationSchema<Form> = {\n  // Optionally disable default transformation based on input.type\n  disableDefaultTransformation: true,\n\n  // Transform fields manually by name\n  fields: {\n    // Primitive type shorthands\n    authorName: "string",\n    authorAge: "number",\n\n    // Type transformation\n    authorBirthDate: value => new Date(Number(value)),\n\n    // Value transformation\n    authorUsername: value => String(value).toLowerCase().replaceAll(/[^a-z]/g, ""),\n  },\n}'})})}),(0,s.jsxs)("p",{children:["You can provide your own transformations using the ",(0,s.jsx)("code",{children:"fields"})," object on transformation schema. Here you can use shorthands (string ",(0,s.jsx)("code",{children:'"number" | "string" | "boolean"'}),") or a function, that takes in a field value and returns your new, transformed value."]}),(0,s.jsxs)("p",{children:["You can easily transform just the types of the values or even mutate and change the data that is stored in form data. See ",(0,s.jsx)(o(),{href:"/examples/advanced/value-transformation",children:"Value transformation"})," example to get an idea how it works."]})]})]})]})}},8496:function(e,n,a){"use strict";a.d(n,{U:function(){return l},Z:function(){return o}});var s=a(5893),i=a(1954),t=a(8375),r=a(478);function o(e){let{children:n,variant:a="info",small:o=!1}=e;return(0,s.jsx)(t.Z,{variant:a,className:"shadow-sm mb-3 p-".concat(o?"1":"2"),style:{fontSize:"0.75rem"},children:(0,s.jsxs)(r.Z,{direction:"horizontal",children:[(0,s.jsx)("div",{children:(0,s.jsx)(i.JO,{icon:function(e){switch(e){case"danger":return"jam:triangle-danger";case"success":return"material-symbols:check-circle-outline-rounded";default:return"tabler:bulb"}}(a),width:o?20:30,className:"me-".concat(o?"1":"2")})}),(0,s.jsx)("div",{children:(0,s.jsx)("p",{className:"mb-0",children:n})})]})})}function l(){return(0,s.jsxs)(o,{variant:"info",children:["This example uses ",(0,s.jsx)("code",{children:"react-bootstrap"})," for styling purposes and some custom UI components for visual aspects."]})}},8375:function(e,n,a){"use strict";var s=a(4184),i=a.n(s),t=a(7294),r=a(5446),o=a(8146),l=a(80),d=a(6792),c=a(1068),u=a(1485),h=a(9602),m=a(6611),f=a(5893);let p=(0,h.Z)("h4");p.displayName="DivStyledAsH4";let x=(0,m.Z)("alert-heading",{Component:p}),j=(0,m.Z)("alert-link",{Component:l.Z}),v={variant:"primary",show:!0,transition:c.Z,closeLabel:"Close alert"},b=t.forwardRef((e,n)=>{let{bsPrefix:a,show:s,closeLabel:t,closeVariant:l,className:h,children:m,variant:p,onClose:x,dismissible:j,transition:v,...b}=(0,r.Ch)(e,{show:"onClose"}),y=(0,d.vE)(a,"alert"),g=(0,o.Z)(e=>{x&&x(!1,e)}),w=!0===v?c.Z:v,N=(0,f.jsxs)("div",{role:"alert",...w?void 0:b,ref:n,className:i()(h,y,p&&`${y}-${p}`,j&&`${y}-dismissible`),children:[j&&(0,f.jsx)(u.Z,{onClick:g,"aria-label":t,variant:l}),m]});return w?(0,f.jsx)(w,{unmountOnExit:!0,...b,ref:void 0,in:s,children:N}):s?N:null});b.displayName="Alert",b.defaultProps=v,n.Z=Object.assign(b,{Link:j,Heading:x})},478:function(e,n,a){"use strict";a.d(n,{Z:function(){return d}});var s=a(4184),i=a.n(s),t=a(7294),r=a(6792),o=a(5893);let l=t.forwardRef(({as:e="div",bsPrefix:n,className:a,direction:s,gap:t,...l},d)=>{n=(0,r.vE)(n,"horizontal"===s?"hstack":"vstack");let c=(0,r.pi)(),u=(0,r.zG)();return(0,o.jsx)(e,{...l,ref:d,className:i()(a,n,...function(e,n=r.Hz,a=r.cs){let s=[];return Object.entries(e).forEach(([e,i])=>{null!=i&&("object"==typeof i?n.forEach(n=>{let t=i[n];if(null!=t){let r=n!==a?`-${n}`:"";s.push(`${e}${r}-${t}`)}}):s.push(`${e}-${i}`))}),s}({gap:t,breakpoints:c,minBreakpoint:u}))})});l.displayName="Stack";var d=l}},function(e){e.O(0,[774,888,179],function(){return e(e.s=5256)}),_N_E=e.O()}]);